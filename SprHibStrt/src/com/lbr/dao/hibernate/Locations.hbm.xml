<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated 02-Mar-2011 13:43:44 by Hibernate Tools 3.4.0.Beta1 -->
<hibernate-mapping>
    <class name="com.lbr.dao.hibernate.domain.Locations" table="locations" catalog="eyakshur_lbr">
        <id name="locationId" type="java.lang.Integer">
            <column name="locationID" />
            <generator class="identity" />
        </id>
        <many-to-one name="city" class="com.lbr.dao.hibernate.domain.City" lazy="false" fetch="select">
            <column name="cityID" />
        </many-to-one>
        <property name="pincode" type="int">
            <column name="pincode" not-null="true">
                <comment>It represents the atomic level of a location; ie the cellular tower location /area. This will help us be precise.</comment>
            </column>
        </property>
        <property name="locName" type="string">
            <column name="locName" length="30" not-null="true" />
        </property>
        <set name="usersesForCurrentLocationId" table="users" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="currentLocationID" />
            </key>
            <one-to-many class="com.lbr.dao.hibernate.domain.Users" />
        </set>
        <set name="eventses" table="events" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="locationID" />
            </key>
            <one-to-many class="com.lbr.dao.hibernate.domain.Events" />
        </set>
        <set name="usersesForHomeLocationId" table="users" inverse="true" lazy="true" fetch="select">
            <key>
                <column name="homeLocationID" />
            </key>
            <one-to-many class="com.lbr.dao.hibernate.domain.Users" />
        </set>
    </class>
</hibernate-mapping>
